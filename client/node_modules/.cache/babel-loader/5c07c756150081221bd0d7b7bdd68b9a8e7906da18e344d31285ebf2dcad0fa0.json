{"ast":null,"code":"var _jsxFileName = \"/home/figs/Documents/Interviews/CustomInk/urlshortner/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Table from \"./Table\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // data state to store the TV Maze API data. Its initial value is an empty array\n  const [data, setData] = useState([]);\n\n  // Using useEffect to call the API once mounted and set the data\n  useEffect(() => {\n    (async () => {\n      const result = await axios(\"https://api.tvmaze.com/search/shows?q=snow\");\n      setData(result.data);\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = App;\nexport default App;\n\n/*\n\nimport React, { Component } from 'react';\n//import { addListener } from '../../server/src/app';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      url: 'this is a placeholder',\n      urls: []\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fetchUrls = this.fetchUrls.bind(this);\n  }  \n  \n  \n  getData(){\n\n  }\n  componentDidMount(){\n    this.fetchUrls();\n  }\n  \n  handleChange(event) {\n    this.setState({url: event.target.value});\n  }\n\n  async handleSubmit(event, url) {\n    event.preventDefault();\n\n   try{\n    await fetch('/urls', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({url: this.state.url}),\n    });\n    }catch(err){\n     console.error()\n    }\n }\n   \n fetchUrls(event){\n  console.log('urlsss', this.state.urls)\n  fetch('/urls')\n    .then(res => res.json())\n    .then(urls => this.setState({ urls }));\n }\n  \n\n\n  render() {\n\n    var heading = ['Short Url'];\n    var body =\n        [['Kapil', 'Jaipur', 'MCA'],\n        ['Aakash', 'Hisar', 'Btech'],\n        ['Mani', 'Ranchi', 'MSc'],\n        ['Yash', 'Udaipur', 'Mtech']\n        ];\n\n    return(\n\n      <div className=\"App\">\n        <h1>Short URL</h1>\n\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            URL Adress:\n            <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form> \n         \n         \n        <button onClick={this.fetchUrls}>\n          fetch urls\n        </button>\n   <br></br>\n         \n\n\n\n\n\n\n\n\n\n\n        {heading.map(url =>\n          <div key={url}>{url}</div>\n        )}\n        \n        {this.state.urls.map(url =>\n          <div key={url._id}>{url.shortUrl}</div>\n        )}\n        \n      </div>\n    )\n  }\n}\n\nexport default App;\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Table","App","data","setData","result","axios"],"sources":["/home/figs/Documents/Interviews/CustomInk/urlshortner/client/src/App.js"],"sourcesContent":["\n\nimport React, { useState, useEffect } from \"react\";\n\nimport Table from \"./Table\";\nimport \"./App.css\";\n\nfunction App() {\n  // data state to store the TV Maze API data. Its initial value is an empty array\n  const [data, setData] = useState([]);\n\n  // Using useEffect to call the API once mounted and set the data\n  useEffect(() => {\n    (async () => {\n      const result = await axios(\"https://api.tvmaze.com/search/shows?q=snow\");\n      setData(result.data);\n    })();\n  }, []);\n\n  return (\n    <div className=\"App\"></div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n/*\n\nimport React, { Component } from 'react';\n//import { addListener } from '../../server/src/app';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      url: 'this is a placeholder',\n      urls: []\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fetchUrls = this.fetchUrls.bind(this);\n  }  \n  \n  \n  getData(){\n\n  }\n  componentDidMount(){\n    this.fetchUrls();\n  }\n  \n  handleChange(event) {\n    this.setState({url: event.target.value});\n  }\n\n  async handleSubmit(event, url) {\n    event.preventDefault();\n\n   try{\n    await fetch('/urls', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({url: this.state.url}),\n    });\n    }catch(err){\n     console.error()\n    }\n }\n   \n fetchUrls(event){\n  console.log('urlsss', this.state.urls)\n  fetch('/urls')\n    .then(res => res.json())\n    .then(urls => this.setState({ urls }));\n }\n  \n\n\n  render() {\n\n    var heading = ['Short Url'];\n    var body =\n        [['Kapil', 'Jaipur', 'MCA'],\n        ['Aakash', 'Hisar', 'Btech'],\n        ['Mani', 'Ranchi', 'MSc'],\n        ['Yash', 'Udaipur', 'Mtech']\n        ];\n\n    return(\n\n      <div className=\"App\">\n        <h1>Short URL</h1>\n\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            URL Adress:\n            <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form> \n         \n         \n        <button onClick={this.fetchUrls}>\n          fetch urls\n        </button>\n   <br></br>\n         \n\n\n\n\n\n\n\n\n\n\n        {heading.map(url =>\n          <div key={url}>{url}</div>\n        )}\n        \n        {this.state.urls.map(url =>\n          <div key={url._id}>{url.shortUrl}</div>\n        )}\n        \n      </div>\n    )\n  }\n}\n\nexport default App;\n*/"],"mappings":";;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EAAA;EACb;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACAC,SAAS,CAAC,MAAM;IACd,CAAC,YAAY;MACX,MAAMK,MAAM,GAAG,MAAMC,KAAK,CAAC,4CAA4C,CAAC;MACxEF,OAAO,CAACC,MAAM,CAACF,IAAI,CAAC;IACtB,CAAC,GAAG;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAK,SAAS,EAAC;EAAK;IAAA;IAAA;IAAA;EAAA,QAAO;AAE/B;AAAC,GAfQD,GAAG;AAAA,KAAHA,GAAG;AAiBZ,eAAeA,GAAG;;AAOl},"metadata":{},"sourceType":"module","externalDependencies":[]}