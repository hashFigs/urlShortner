{"ast":null,"code":"var _jsxFileName = \"/home/figs/Documents/Interviews/CustomInk/urlshortner/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n\n//import Table from \"./Table\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [urls, setUrls] = useState([{\n    \"shortUrl\": 'urlstea1'\n  }, {\n    \"shortUrl\": 'urlstea2'\n  }]);\n\n  // Using useEffect to call the API once mounted and set the data\n  useEffect(() => {\n    (async () => {\n      const result = await fetch('/urls');\n      console.log(result.data);\n      setData(result.data);\n      /*\n      const result = await axios(\"https://api.tvmaze.com/search/shows?q=snow\");\n      setData(result.data);\n      */\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Short URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"URL Adress:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), urls.map(url => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: url.shortUrl\n    }, url._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true);\n}\n_s(App, \"AFZuWPXbTbpxHTktCJn2UVZulME=\");\n_c = App;\nexport default App;\n\n/*\n\nimport React, { Component } from 'react';\n//import { addListener } from '../../server/src/app';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      url: 'this is a placeholder',\n      urls: []\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fetchUrls = this.fetchUrls.bind(this);\n  }  \n  \n  \n  getData(){\n\n  }\n  componentDidMount(){\n    this.fetchUrls();\n  }\n  \n  handleChange(event) {\n    this.setState({url: event.target.value});\n  }\n\n  async handleSubmit(event, url) {\n    event.preventDefault();\n\n   try{\n    await fetch('/urls', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({url: this.state.url}),\n    });\n    }catch(err){\n     console.error()\n    }\n }\n   \n fetchUrls(event){\n  console.log('urlsss', this.state.urls)\n  fetch('/urls')\n    .then(res => res.json())\n    .then(urls => this.setState({ urls }));\n }\n  \n\n\n  render() {\n\n    var heading = ['Short Url'];\n    var body =\n        [['Kapil', 'Jaipur', 'MCA'],\n        ['Aakash', 'Hisar', 'Btech'],\n        ['Mani', 'Ranchi', 'MSc'],\n        ['Yash', 'Udaipur', 'Mtech']\n        ];\n\n    return(\n\n      <div className=\"App\">\n        <h1>Short URL</h1>\n\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            URL Adress:\n            <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form> \n         \n         \n        <button onClick={this.fetchUrls}>\n          fetch urls\n        </button>\n   <br></br>\n         \n\n\n\n\n\n\n\n\n\n\n        {heading.map(url =>\n          <div key={url}>{url}</div>\n        )}\n        \n        {this.state.urls.map(url =>\n          <div key={url._id}>{url.shortUrl}</div>\n        )}\n        \n      </div>\n    )\n  }\n}\n\nexport default App;\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","App","data","setData","urls","setUrls","result","fetch","console","log","map","url","shortUrl","_id"],"sources":["/home/figs/Documents/Interviews/CustomInk/urlshortner/client/src/App.js"],"sourcesContent":["\n\nimport React, { useState, useEffect } from \"react\";\n\n//import Table from \"./Table\";\nimport \"./App.css\";\n\nfunction App() {\n\n  const [data, setData] = useState([]);\n  const [urls, setUrls] = useState([{\"shortUrl\": 'urlstea1'},{\"shortUrl\": 'urlstea2'}]);\n\n  // Using useEffect to call the API once mounted and set the data\n  useEffect(() => {\n    (async () => {\n      const result = await fetch('/urls')\n      console.log(result.data)\n      setData(result.data);\n      /*\n      const result = await axios(\"https://api.tvmaze.com/search/shows?q=snow\");\n      setData(result.data);\n      */\n    })();\n  }, []);\n\n  return (\n    <>\n    <div className=\"App\"></div>\n    <h1>Short URL</h1>\n\n    <form >\n      <label>\n        URL Adress:\n        <input type=\"text\" />\n      </label>\n      <input type=\"submit\" value=\"Submit\" />\n    </form> \n    \n    {urls.map(url =>\n          <div key={url._id}>{url.shortUrl}</div>\n        )}\n\n    </>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n/*\n\nimport React, { Component } from 'react';\n//import { addListener } from '../../server/src/app';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      url: 'this is a placeholder',\n      urls: []\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fetchUrls = this.fetchUrls.bind(this);\n  }  \n  \n  \n  getData(){\n\n  }\n  componentDidMount(){\n    this.fetchUrls();\n  }\n  \n  handleChange(event) {\n    this.setState({url: event.target.value});\n  }\n\n  async handleSubmit(event, url) {\n    event.preventDefault();\n\n   try{\n    await fetch('/urls', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({url: this.state.url}),\n    });\n    }catch(err){\n     console.error()\n    }\n }\n   \n fetchUrls(event){\n  console.log('urlsss', this.state.urls)\n  fetch('/urls')\n    .then(res => res.json())\n    .then(urls => this.setState({ urls }));\n }\n  \n\n\n  render() {\n\n    var heading = ['Short Url'];\n    var body =\n        [['Kapil', 'Jaipur', 'MCA'],\n        ['Aakash', 'Hisar', 'Btech'],\n        ['Mani', 'Ranchi', 'MSc'],\n        ['Yash', 'Udaipur', 'Mtech']\n        ];\n\n    return(\n\n      <div className=\"App\">\n        <h1>Short URL</h1>\n\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            URL Adress:\n            <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form> \n         \n         \n        <button onClick={this.fetchUrls}>\n          fetch urls\n        </button>\n   <br></br>\n         \n\n\n\n\n\n\n\n\n\n\n        {heading.map(url =>\n          <div key={url}>{url}</div>\n        )}\n        \n        {this.state.urls.map(url =>\n          <div key={url._id}>{url.shortUrl}</div>\n        )}\n        \n      </div>\n    )\n  }\n}\n\nexport default App;\n*/"],"mappings":";;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAElD;AACA,OAAO,WAAW;AAAC;AAAA;AAEnB,SAASC,GAAG,GAAG;EAAA;EAEb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,CAAC;IAAC,UAAU,EAAE;EAAU,CAAC,EAAC;IAAC,UAAU,EAAE;EAAU,CAAC,CAAC,CAAC;;EAErF;EACAC,SAAS,CAAC,MAAM;IACd,CAAC,YAAY;MACX,MAAMM,MAAM,GAAG,MAAMC,KAAK,CAAC,OAAO,CAAC;MACnCC,OAAO,CAACC,GAAG,CAACH,MAAM,CAACJ,IAAI,CAAC;MACxBC,OAAO,CAACG,MAAM,CAACJ,IAAI,CAAC;MACpB;AACN;AACA;AACA;IACI,CAAC,GAAG;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,wBACA;MAAK,SAAS,EAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAO,eAC3B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB,eAElB;MAAA,wBACE;QAAA,uCAEE;UAAO,IAAI,EAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACf,eACR;QAAO,IAAI,EAAC,QAAQ;QAAC,KAAK,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACjC,EAENE,IAAI,CAACM,GAAG,CAACC,GAAG,iBACP;MAAA,UAAoBA,GAAG,CAACC;IAAQ,GAAtBD,GAAG,CAACE,GAAG;MAAA;MAAA;MAAA;IAAA,QAAsB,CACxC;EAAA,gBAEF;AAEP;AAAC,GArCQZ,GAAG;AAAA,KAAHA,GAAG;AAuCZ,eAAeA,GAAG;;AAOl},"metadata":{},"sourceType":"module","externalDependencies":[]}